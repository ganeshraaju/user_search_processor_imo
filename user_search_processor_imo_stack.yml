AWSTemplateFormatVersion: 2010-09-09
Description: Stack for UserSearch Analytics Curation
Parameters:
  env:
    Type: String
    Description: Deployment Env
    Default: dev
Resources:
  UserSearchstepFunctionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action: ["sts:AssumeRole"]
            Principal:
              Service: ["states.amazonaws.com"]
      Path: /
      Policies:
        - PolicyName: StepFunctionPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - glue:StartWorkflowRun
                Resource: '*'
  EventBridgestepFunctionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action: ["sts:AssumeRole"]
            Principal:
              Service: ["states.amazonaws.com"]
      Path: /
      Policies:
        - PolicyName: EventBridgestepFunctionPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - states:StartExecution
                Resource: '*'

  GlueRoleSearchProcessor:
    Type: 'AWS::IAM::Role'
    Properties:
      MaxSessionDuration: 28800
      RoleName: GlueRoleSearchProcessor
      Policies:
        - PolicyName: glue-service-curated-role
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Sid: AthenaAllow
                Effect: Allow
                Action:
                  - 'athena:*'
                Resource: '*'
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: AllowsGlue
            Effect: Allow
            Principal:
              Service: glue.amazonaws.com
            Action: 'sts:AssumeRole'
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/service-role/AWSGlueServiceRole'
        - 'arn:aws:iam::aws:policy/AmazonS3FullAccess'
  UserSearchGlueETLJob:
    Type: 'AWS::Glue::Job'
    Properties:
      GlueVersion: '3.0'
      Name: 'user-search-processor-imo-etl'
      Command:
        Name: glueetl
        PythonVersion: '3'
        ScriptLocation: 's3://search-analytics/user_search_processor_imo.py'
      DefaultArguments:
        '--enable-metrics': ''
        '--enable-glue-datacatalog': ''
        '--enable-continuous-cloudwatch-log': 'true'
        '--enable-continuous-log-filter': 'true'
        '--autosuggest_db': autosuggest_db
        '--autosuggest_table': autosuggest_table
        '--user_search_db': user_search_db
        '--user_search_data_table': user_search_data_table
        '--output_path': s3://search_processor/search_analytics_output/
        '--debug_flag': 'N'
        '--start_date': ' '
        '--end_date': ' '
        '--enable-s3-parquet-optimized-committer': 'true'
        '--conf': >-
          spark.hadoop.fs.s3.maxRetries=20 --conf spark.driver.maxResultSize=4g
          --conf spark.executor.cores=6 --conf spark.sql.shuffle.partitions=600
          --conf spark.executor.extraJavaOptions=-XX:+UseG1GC --conf
          spark.shuffle.spill.compress=true --conf
          spark.io.compression.codec=lz4 --conf spark.shuffle.compress=true
          --conf spark.sql.files.maxRecordsPerFile=30000
      ExecutionProperty:
        MaxConcurrentRuns: 1
      MaxRetries: 0
      Role: !Ref GlueRoleSearchProcessor
      Description: User Search Analytics processor imo
      WorkerType: G.2X
      NumberOfWorkers: 30

  UserSearchDatabase:
      Type: AWS::Glue::Database
      Properties:
        CatalogId:
          Ref: AWS::AccountId
        DatabaseInput:
          Description: Glue Database For User Search Crawler
          Name: user_search_db
  UserSearchDBCrawler:
      Type: AWS::Glue::Crawler
      Properties:
        Name: user_search_db_crawler
        Role: !Ref GlueRoleSearchProcessor
        DatabaseName:
          Ref: UserSearchDatabase
        Targets:
          S3Targets:
          - Path: 's3://search-analytics-datalanding/parquet'

  UserSearchResultDatabase:
      Type: AWS::Glue::Database
      Properties:
        CatalogId:
          Ref: AWS::AccountId
        DatabaseInput:
          Description: Glue Database For User Search results Crawler
          Name: user_search_result_db
  UserSearchResultsDBCrawler:
      Type: AWS::Glue::Crawler
      Properties:
        Name: user_search_results_db_crawler
        Role: !Ref GlueRoleSearchProcessor
        DatabaseName:
          Ref: UserSearchResultDatabase
        Targets:
          S3Targets:
          - Path: s3://search_processor/search_analytics_output/

  UsersearchWorkflow:
    Type: AWS::Glue::Workflow
    Properties:
      Description: Workflow for orchestrating my jobs
      Name: UsersearchWorkflow

  WorkflowStartTrigger:
    Type: AWS::Glue::Trigger
    Properties:
      Name: StartTrigger
      Type: ON_DEMAND
      Description: Trigger for starting the workflow
      Actions:
        - CrawlerName: !Ref UserSearchDBCrawler
      WorkflowName: !Ref UsersearchWorkflow

  WorkflowJobTrigger:
    Type: AWS::Glue::Trigger
    Properties:
      Name: CrawlerSuccessfulTrigger
      Type: CONDITIONAL
      StartOnCreation: True
      Description: Trigger to start the glue job
      Actions:
        - JobName: !Ref GlueRoleSearchProcessor
      Predicate:
        Conditions:
          - LogicalOperator: EQUALS
            CrawlerName: !Ref UserSearchDBCrawler
            CrawlState: SUCCEEDED
      WorkflowName: !Ref UsersearchWorkflow
  WorkflowresultcrawlerTrigger:
    Type: AWS::Glue::Trigger
    Properties:
      Name: WorkflowresultcrawlerTrigger
      Type: CONDITIONAL
      StartOnCreation: True
      Description: Trigger to start the glue crawler
      Actions:
        - CrawlerName: !Ref UserSearchResultsDBCrawler
      Predicate:
        Conditions:
          - LogicalOperator: EQUALS
            JobName: !Ref GlueRoleSearchProcessor
            State: SUCCEEDED
      WorkflowName: !Ref UsersearchWorkflow

  UserSearchStepFunctionDataPipeline:
    Type: AWS::StepFunctions::StateMachine
    Properties:
      StateMachineName: UserSearchWorkflowState
      DefinitionString: |-
          {
            "Comment": "A description of my state machine",
            "StartAt": "StartWorkflowRun",
            "States": {
              "StartWorkflowRun": {
                "Type": "Task",
                "Parameters": {
                  "Name": "UsersearchWorkflow"
                },
                "Resource": "arn:aws:states:::aws-sdk:glue:startWorkflowRun",
                "End": true
              }
            }
          }
      RoleArn: !GetAtt UserSearchstepFunctionRole.Arn

  EventBridgeTrigger:
    Type: AWS::Events::Rule
    Properties:
      Description: EventBridge Trigger for step function
      Name: UserSearchAnalyticsRule
      ScheduleExpression: "cron(0 10 * * ? *)"
      State: ENABLED
      Targets:
          - Id: UserSearchStateMachine
            Arn: !GetAtt UserSearchStepFunctionDataPipeline.Arn
            RoleArn: !GetAtt EventBridgestepFunctionRole.Arn


Outputs:
  StateMachineArn:
    Description: >-
      The S3 Datastore bucket where your Connectivity Usage SLA and User
      Bandwidth combined dataset v1 is published.
    Value: !GetAtt UserSearchStepFunctionDataPipeline.Arn

  StateMachineName:
    Description: >-
      The S3 Datastore bucket where your Connectivity Usage SLA and User
      Bandwidth combined dataset v1 is published.
    Value: !GetAtt UserSearchStepFunctionDataPipeline.Name
